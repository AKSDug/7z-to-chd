[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "7z-to-chd"
version = "1.0.2"
description = "Cross-platform utility for bulk extraction of .7z archives and conversion to CHD format"
authors = [{name = "AKSDug", email = "aksdug@proton.me"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Archiving :: Compression",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Games/Entertainment :: Arcade",
]
keywords = ["7z", "chd", "conversion", "mame", "emulation", "dreamcast", "playstation"]
dependencies = [
    "py7zr>=0.20.0",
    "tqdm>=4.64.0",
    "colorama>=0.4.6",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/AKSDug/7z-to-chd"
Repository = "https://github.com/AKSDug/7z-to-chd"
Issues = "https://github.com/AKSDug/7z-to-chd/issues"

[project.scripts]
7z-to-chd = "convert:main"

[tool.black]
line-length = 100
target-version = ['py37']
include = '\.pyi?$'

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["lib"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]